import React from 'react';
import { extendObservable, observable } from 'mobx';
import JBSearchBarData from 'jb-searchbar-react/dist/JBSearchBarData.min';
import { observer } from 'mobx-react';
import JBSearchBar from 'jb-searchbar-react/dist/JBSearchBar.min';

var _class, _descriptor, _descriptor2, _descriptor3, _temp;
function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object['ke' + 'ys'](descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object['define' + 'Property'](target, property, desc); desc = null; } return desc; }
var JBGridService = (_class = (_temp =
function () {
  function JBGridService(config, bridge) {
    var _this = this;
    _classCallCheck(this, JBGridService);
    _initializerDefineProperty(this, "styles", _descriptor, this);
    this.elements = {
      refreshIcon: React.createRef()
    };
    this.JBGridComponentDom = null;
    this.gridWrapperElement = null;
    _initializerDefineProperty(this, "isLoading", _descriptor2, this);
    this.dataBridge = void 0;
    this.paganitionDebounce = void 0;
    this.searchBarHeight = 45;
    _initializerDefineProperty(this, "isErrorOccurred", _descriptor3, this);
    if (config == undefined || config == null) {
      console.error("JBGrid need you to pass config as a prop to it \n and currently its null or undefined");
      return null;
    }
    this.config = observable(config);
    this.paganitionDebounce = this.debounce(this.refreshData, 300);
    if (this.config.styles == undefined) {
      extendObservable(this.config, {
        styles: this.styles
      });
    } else {
      this.config.styles = this.styles;
    }
    var triggers = {
      refreshData: function refreshData() {
        return _this.refreshData();
      },
      fullScreenGrid: function fullScreenGrid() {
        return _this.fullScreenGrid();
      },
      exitFullScreenGrid: function exitFullScreenGrid() {
        return _this.exitFullScreenGrid();
      }
    };
    if (this.config.triggers == undefined) {
      extendObservable(this.config, {
        triggers: triggers
      });
    } else {
      this.config.triggers = triggers;
    }
    if (typeof bridge != 'function') {
      this.dataBridge = new bridge();
      console.error('JBGrid need Bridge to perform well');
    } else {
      this.dataBridge = new bridge();
    }
    this.InitGrid();
  }
  _createClass(JBGridService, [{
    key: "InitGrid",
    value: function InitGrid() {
      this.InitSize();
      this.initFilter();
    }
  }, {
    key: "onComponentDidMount",
    value: function onComponentDidMount() {
      this.sendFirstRequest();
    }
  }, {
    key: "mergeObject",
    value: function mergeObject(inputConfig, defaultConfig) {
      var addedProperty = {};
      for (var prop in defaultConfig) {
        if (inputConfig[prop] == undefined || inputConfig[prop] == null) {
          addedProperty[prop] = defaultConfig[prop];
        }
      }
      extendObservable(inputConfig, addedProperty);
      return inputConfig;
    }
  }, {
    key: "sendFirstRequest",
    value: function sendFirstRequest() {
      var _this2 = this;
      this.isLoading = true;
      this.fetchGridData().then(function () {
        _this2.isLoading = false;
        _this2.hideErrorPanel();
      }).catch(function (e) {
        _this2.isLoading = false;
        _this2.showErrorPanel();
      });
    }
  }, {
    key: "initFilter",
    value: function initFilter() {
      var _this3 = this;
      if (this.config.filter.columns) {
        var defualtFilterConfig = new JBSearchBarData();
        this.config.filter = this.mergeObject(this.config.filter, defualtFilterConfig);
        this.config.filter.callBacks.onHeightChange = function (searchBarHeight) {
          _this3.searchBarHeight = searchBarHeight;
          _this3.setGridElementsHeight();
        };
      }
    }
  }, {
    key: "InitSize",
    value: function InitSize() {
      var scrollWidth = this.getScrollbarWidth();
      this.styles.table.scrollIndent.width = 'calc(100% - ' + scrollWidth + 'px)';
      var gridTemplateColumns = "";
      this.config.table.columns.map(function (item, index) {
        if (item.width != null || item.width != undefined) {
          if (typeof item.width == "number") {
            gridTemplateColumns += ' ' + item.width + 'px';
          } else {
            gridTemplateColumns += ' ' + item.width;
          }
        } else {
          gridTemplateColumns += " 1fr";
        }
      });
      this.styles.table.generalCols.gridTemplateColumns = gridTemplateColumns;
      this.styles.table.fullWidthCol.gridColumn = "1 / " + (this.config.table.columns.length + 1);
      this.setGridElementsHeight();
    }
  }, {
    key: "setGridElementsHeight",
    value: function setGridElementsHeight() {
      var footerHeight = 48;
      var headerHeight = 48;
      if (this.config.states.headerSection == "search") {
        headerHeight = this.searchBarHeight + 3;
      }
      var totalHeight = footerHeight + headerHeight;
      this.styles.contentWrapper.height = "calc(100% - ".concat(totalHeight, "px)");
      this.styles.searchBar.height = this.searchBarHeight + 'px';
    }
  }, {
    key: "getScrollbarWidth",
    value: function getScrollbarWidth() {
      var outer = document.createElement("div");
      outer.style.visibility = "hidden";
      outer.style.width = "100px";
      outer.style.msOverflowStyle = "scrollbar";
      document.body.appendChild(outer);
      var widthNoScroll = outer.offsetWidth;
      outer.style.overflow = "scroll";
      var inner = document.createElement("div");
      inner.style.width = "100%";
      outer.appendChild(inner);
      var widthWithScroll = inner.offsetWidth;
      outer.parentNode.removeChild(outer);
      return widthNoScroll - widthWithScroll;
    }
  }, {
    key: "fetchGridData",
    value: function fetchGridData() {
      var _this4 = this;
      var fetchGridDataPromise = new Promise(function (resolve, reject) {
        var requestBody = _this4.CreateRequestBody();
        _this4.dataBridge.getData(_this4.config.data, requestBody).then(function (data) {
          var bridgeData = _this4.dataBridge.mapServerResponseDataToGridData(data);
          if (bridgeData.pageIndex == _this4.config.page.index) {
            _this4.config.data.data = [];
            _this4.standardData(bridgeData).then(function (data) {
              _this4.config.data.data = data.content;
              _this4.config.data.itemsInformation.startItemIndex = data.startItemIndex;
              _this4.config.data.itemsInformation.endItemIndex = data.endItemIndex;
              _this4.config.data.itemsInformation.totalItemsCount = data.totalItemsCount;
              _this4.config.page.totalPages = bridgeData.totalPages;
              resolve();
            });
          }
        }).catch(function (err) {
          reject(err);
        });
      });
      return fetchGridDataPromise;
    }
  }, {
    key: "standardData",
    value: function standardData(data) {
      var _this5 = this;
      return new Promise(function (resolve, reject) {
        var items = data.content;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var item = _step.value;
            item.jbGridDetail = {
              isDeleting: false,
              isDeleted: false,
              isRecovering: false,
              isCollapsed: true
            };
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        if (_this5.config.callbacks.onDataStandarding) {
          var response = _this5.config.callbacks.onDataStandarding(data);
          if (response instanceof Promise) {
            response.then(function (data) {
              resolve(data);
            });
          } else {
            resolve(data);
          }
        } else {
          resolve(data);
        }
      });
    }
  }, {
    key: "CreateRequestBody",
    value: function CreateRequestBody() {
      var sortColumn = this.config.table.columns.find(function (x) {
        return x.sort;
      });
      var requestBody = this.dataBridge.createRequestBody(this.config.page, this.config.filter, sortColumn);
      return requestBody;
    }
  }, {
    key: "goToNextPage",
    value: function goToNextPage(event) {
      var currentPage = this.config.page.index;
      if (currentPage < this.config.page.totalPages) {
        this.goToPage(currentPage + 1);
      }
    }
  }, {
    key: "goToPrevPage",
    value: function goToPrevPage(event) {
      var currentPage = this.config.page.index;
      if (currentPage > 1) {
        this.goToPage(currentPage - 1);
      }
    }
  }, {
    key: "goToLastPage",
    value: function goToLastPage(event) {
      var currentPage = this.config.page.index;
      if (currentPage != this.config.page.totalPages) {
        this.goToPage(this.config.page.totalPages);
      }
    }
  }, {
    key: "goToFirstPage",
    value: function goToFirstPage(event) {
      var currentPage = this.config.page.index;
      if (currentPage != 1) {
        this.goToPage(1);
      }
    }
  }, {
    key: "refreshBtnClick",
    value: function refreshBtnClick(event) {
      var _this6 = this;
      var anime = this.playRefreshBtnAnimation();
      this.refreshData().then(function () {
        _this6.stopRefreshBtnAnimation(anime);
      }).catch(function (e) {
        _this6.stopRefreshBtnAnimation(anime);
      });
    }
  }, {
    key: "playRefreshBtnAnimation",
    value: function playRefreshBtnAnimation() {
      var anime = this.elements.refreshIcon.current.animate([{
        transform: "rotate(0deg)"
      }, {
        transform: "rotate(360deg)"
      }], {
        id: 'rotate',
        duration: 400,
        direction: "reverse",
        iterations: Infinity
      });
      return anime;
    }
  }, {
    key: "stopRefreshBtnAnimation",
    value: function stopRefreshBtnAnimation(anime) {
      anime.cancel();
    }
  }, {
    key: "goToPage",
    value: function goToPage(destinitionPageIndex) {
      var _this7 = this;
      return new Promise(function (resolve, reject) {
        _this7.config.page.index = destinitionPageIndex;
        _this7.paganitionDebounce().then(function () {
          resolve();
          if (_this7.config.callbacks.onPageIndexChange) {
            _this7.config.callbacks.onPageIndexChange(destinitionPageIndex);
          }
        }).catch(function (e) {
          reject(e);
        });
      });
    }
  }, {
    key: "debounce",
    value: function debounce(func, delay) {
      var inDebounce;
      var debounseInstance = function debounseInstance() {
        var _this8 = this,
            _arguments = arguments;
        return new Promise(function (resolve, reject) {
          var context = _this8;
          var args = _arguments;
          clearTimeout(inDebounce);
          inDebounce = setTimeout(function () {
            return func.apply(context, args).then(function (args) {
              resolve(args);
            }).catch(function (e) {
              reject(e);
            });
          }, delay);
        });
      };
      return debounseInstance;
    }
  }, {
    key: "refreshData",
    value: function refreshData() {
      var _this9 = this;
      var refreshDataPromise = new Promise(function (resolve, reject) {
        _this9.isLoading = true;
        _this9.fetchGridData().then(function () {
          _this9.isLoading = false;
          _this9.hideErrorPanel();
          resolve();
        }).catch(function (e) {
          _this9.isLoading = false;
          _this9.showErrorPanel();
          reject(e);
        });
      });
      return refreshDataPromise;
    }
  }, {
    key: "onSearch",
    value: function onSearch(filterList) {
      var _this10 = this;
      var onSeachPromise = new Promise(function (resolve, reject) {
        _this10.goToPage(1).then(function () {
          resolve();
        }).catch(function (e) {
          reject(e);
        });
      });
      return onSeachPromise;
    }
  }, {
    key: "onPageSizeChange",
    value: function onPageSizeChange(e) {
      this.config.page.size = e.target.value;
      this.goToPage(1);
    }
  }, {
    key: "onFullScreenBtnClicked",
    value: function onFullScreenBtnClicked() {
      if (this.config.fullScreenable) {
        if (this.config.states.isFullScreen) {
          this.exitFullScreenGrid();
        } else {
          this.fullScreenGrid();
        }
      }
    }
  }, {
    key: "fullScreenGrid",
    value: function fullScreenGrid() {
      var container = document.createElement('div');
      container.classList.add('jb-grid-full-screen-container');
      document.body.append(container);
      this.JBGridComponentDom;
      var child = document.createElement('div');
      child.innerHTML = "";
      this.gridWrapperElement = this.JBGridComponentDom.parentElement;
      container.append(this.JBGridComponentDom);
      this.config.states.isFullScreen = true;
    }
  }, {
    key: "exitFullScreenGrid",
    value: function exitFullScreenGrid() {
      var container = document.getElementsByClassName('jb-grid-full-screen-container');
      this.gridWrapperElement.append(this.JBGridComponentDom);
      container[0].remove();
      this.config.states.isFullScreen = false;
    }
  }, {
    key: "setSortColumn",
    value: function setSortColumn(column) {
      if (column.sortable) {
        if (column.sort) {
          column.sort = column.sort.toUpperCase() == "ASC" ? "DESC" : "ASC";
        } else {
          var prevColumnSort = this.config.table.columns.find(function (x) {
            return x.sort;
          });
          if (prevColumnSort) {
            prevColumnSort.sort = undefined;
            column.sort = "ASC";
          }
        }
        this.refreshData();
      }
    }
  }, {
    key: "changePageNumberToInput",
    value: function changePageNumberToInput() {
      var pageNumber = prompt("شماره صفحه ای که میخواهید وارد آن شوید را وارد کنید", this.config.page.totalPages);
      if (parseInt(pageNumber) > 0 && parseInt(pageNumber) < this.config.page.totalPages) {
        this.goToPage(parseInt(pageNumber));
      }
    }
  }, {
    key: "openSearchHeaderSection",
    value: function openSearchHeaderSection() {
      this.config.filter.triggers.focus();
      this.config.states.headerSection = "search";
      this.setGridElementsHeight();
    }
  }, {
    key: "openMainHeaderSection",
    value: function openMainHeaderSection() {
      this.config.states.headerSection = "main";
      this.setGridElementsHeight();
    }
  }, {
    key: "showErrorPanel",
    value: function showErrorPanel() {
      this.isErrorOccurred = true;
    }
  }, {
    key: "hideErrorPanel",
    value: function hideErrorPanel() {
      this.isErrorOccurred = false;
    }
  }, {
    key: "toPersianNumber",
    value: function toPersianNumber(input) {
      var inputString = input.toString();
      var correctedString = inputString.replace(/[0-9]/g, function (word) {
        return String.fromCharCode(1776 + parseInt(word));
      });
      return correctedString;
    }
  }]);
  return JBGridService;
}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "styles", [observable], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return {
      table: {
        generalCols: {
          gridTemplateColumns: "auto"
        },
        fullWidthCol: {
          gridColumn: '1 / end'
        },
        scrollIndent: {
          width: 'calc(100% - 17px)'
        },
        mainRowStyle: {
          gridTemplateColumns: "auto"
        }
      },
      searchBar: {
        height: '45px'
      },
      contentWrapper: {
        height: 'calc(100% - 96px)'
      }
    };
  }
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "isLoading", [observable], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "isErrorOccurred", [observable], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
})), _class);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === 'undefined') { return; }
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".jb-grid-wrapper{width:100%;height:100%;display:block;box-shadow:0px 0px 14px 2px #f0f4f7;border-radius:4px}.jb-grid-wrapper svg{fill:#7b7b7b}.jb-grid-wrapper svg:hover{fill:#2e3139}.jb-grid-header{background-color:#fff;border-bottom:3px solid #2dadc1;grid-column-start:1;grid-column-end:end;grid-row-start:1;grid-row-end:span 1;display:block;height:auto;width:100%;border-top-left-radius:4px;border-top-right-radius:4px}.jb-grid-header .main-section{height:45px;width:100%}.jb-grid-header .main-section .button-container{float:left;display:flex;height:100%}.jb-grid-header .main-section.hidden{display:none}.jb-grid-header .search-section{height:100%;width:100%}.jb-grid-header .search-section.hidden{display:none}.jb-grid-header .search-section .close-btn{float:right;width:45px;height:45px}.jb-grid-header .search-section .close-btn svg{width:24px;margin:11px;cursor:pointer}.jb-grid-header .search-section .search-bar-wrapper{float:right;width:calc(100% - 48px);height:100%}.jb-grid-header .button-container .btn{height:100%;width:48px}.jb-grid-header .button-container .btn svg{display:block;margin:8px 8px}.jb-grid-header .jb-grid-title{float:right;display:block;padding:0 8px;font-size:18px;line-height:48px}.jb-grid-header .jb-grid-content{background-color:#fff;grid-column-start:1;grid-column-end:end;grid-row-start:2;grid-row-end:span 1}.jb-grid-footer{background-color:#f0f4f7;height:48px;width:100%;display:block;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.jb-grid-footer .page-size-section{padding:0 16px;float:left;align-items:center;height:100%;color:#7b7b7b;font-size:16px;display:flex}.jb-grid-footer .page-size-section .page-size-select{background-color:transparent;font-family:inherit;color:#7b7b7b;font-size:16px;border:none}.jb-grid-footer .items-information-section{float:left;display:flex;align-items:center;height:100%;color:#7b7b7b;font-size:16px}.navigation-section{float:left;display:flex;align-items:center;height:100%}.navigation-section nav{display:flex;align-items:center;height:48px}.navigation-section nav svg{height:40px;display:block;margin:0px 4px}.navigation-section nav .nav-btn{height:100%;width:48px;padding:4px}.navigation-section nav .nav-btn:hover{cursor:pointer}.navigation-section nav .nav-btn:hover svg{fill:#2e3139}.navigation-section nav .number-container{font-size:16px;max-width:144px;overflow:hidden;text-align:center;padding:0;margin:0 auto;position:relative}.navigation-section nav .number-container .number-wrapper{position:relative;margin:0 -50%;white-space:nowrap}.navigation-section nav .number-container .number-btn.current-page{color:#ef6c00;font-size:1em}.navigation-section nav .number-container .number-btn{color:#b4b4b4;padding:0 8px;font-size:0.8em;cursor:pointer;width:48px;display:inline-block}.btn-wrapper-section{float:right;height:100%}.btn-wrapper-section .btn{float:right;width:48px;height:48px;cursor:pointer}.btn-wrapper-section .btn svg{height:24px;margin:11px}.btn-wrapper-section .btn svg .refresh-btn{transform:rotate(-146deg)}.jb-grid-content{display:block;height:calc(100% - 96px);position:relative}.jb-grid-content .loading{position:absolute;width:100%;height:100%;background-color:#fffffff2;top:0;right:0}.jb-grid-content .loading .loading-content{width:300px;height:300px;position:relative;top:calc(50% - 150px);right:calc(50% - 150px);font-size:23px}.jb-grid-content .error-panel{width:100%;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:column}.jb-grid-content .error-panel .error-image{font-size:5em}.jb-grid-content .error-panel .error-text{font-weight:100;font-size:1.5em;padding:16px 0;color:#333}.jb-grid-content .error-panel .error-button button{padding:8px 16px;background:green;color:#fff;border:none;border-radius:150px;cursor:pointer}.jb-grid-content .table-header{width:100%;height:32px;background-color:#f0f4f7;overflow:hidden}@media (max-width: 768px){.jb-grid-content .table-header{display:none}}.jb-grid-content .table-header .table-header-wrapper{display:grid;grid-template-columns:auto;grid-auto-columns:1fr;line-height:32px}.jb-grid-content .table-header .table-header-wrapper .header-item{padding:0 16px;align-self:right;overflow:hidden;display:flex}.jb-grid-content .table-header .table-header-wrapper .header-item.sortable-col{cursor:pointer}.jb-grid-content .table-header .table-header-wrapper .header-item .sort-icon-wrapper svg{fill:#1E201D;height:16px;margin-top:8px}.jb-grid-content .table-header .table-header-wrapper .header-item .sort-icon-wrapper svg.--asc{transition:all .2s ease-out;transform:rotate(0deg)}.jb-grid-content .table-header .table-header-wrapper .header-item .sort-icon-wrapper svg.--desc{transform:rotate(180deg);transition:all .2s ease-out}.jb-grid-content .table-content{width:100%;background-color:#fff;overflow-y:scroll;height:calc(100% - 32px)}@media (max-width: 768px){.jb-grid-content .table-content{height:100%}}.jb-grid-content .table-content::-webkit-scrollbar{width:9px;background-color:#f0f4f7}.jb-grid-content .table-content::-webkit-scrollbar-thumb{background-color:#c3c3c3}.jb-grid-content .table-content .table-content-wrapper{display:block;height:100%;width:100%;max-height:100%}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row{width:100%;display:grid;grid-template-columns:auto;box-sizing:border-box;grid-auto-rows:minmax(48px, auto)}@media (max-width: 768px){.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row{grid-template-columns:auto !important;grid-template-rows:auto}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row .jb-grid-table-cell:first-child{box-shadow:0px 6px 6px #dadada}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row .jb-grid-table-cell:not(:first-child){display:grid;grid-template-columns:1fr 4fr}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row .jb-grid-table-cell:not(:first-child)::before{content:attr(data-label)}}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-row:nth-child(even){background:#f9f9f9}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-cell{padding:4px 16px;overflow-x:hidden;grid-auto-rows:minmax(48px, auto);align-self:center;display:grid;align-items:center;border-left:1px solid #f9f9f9}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-cell.flex-cell{display:flex}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-cell.with-collapse-cell{grid-template-columns:24px auto}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-delete-row{background-color:#EF5350;width:100%;height:48px}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-delete-row .status-caption{color:#fff;padding:8px 16px;font-size:16px;float:right}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-delete-row .undo-delete-btn{color:#fff;fill:#fff;padding:8px 16px;height:28px;float:left;cursor:pointer}.jb-grid-content .table-content .table-content-wrapper .jb-grid-table-delete-row .undo-delete-btn svg{height:26px;fill:#fff;margin-right:8px}.jb-grid-wrapper .jb-grid-content .delete-btn{float:right}.jb-grid-wrapper .jb-grid-content .delete-btn svg{fill:#EF5350;height:28px;cursor:pointer;overflow:visible}.jb-grid-wrapper .jb-grid-content .delete-btn svg .door{transition:all .2s ease-out}.jb-grid-wrapper .jb-grid-content .delete-btn:hover svg .door{transform:rotate(-30deg);transform-origin:-66px;transition:all .2s ease-in-out}.jb-grid-wrapper .jb-grid-content .edit-btn{float:right}.jb-grid-wrapper .jb-grid-content .edit-btn svg{fill:#2962FF;height:28px;cursor:pointer;overflow:visible}.jb-grid-wrapper .jb-grid-content .edit-btn svg .pen{transform:translate(0px, 0px);transition:all .2s ease-in-out}.jb-grid-wrapper .jb-grid-content .edit-btn:hover svg .pen{transform:translate(13px, 0px);transition:all .2s ease-in-out}.jb-grid-wrapper .jb-grid-content .edit-btn svg .line{stroke-width:2;stroke:#2962FF}.jb-grid-wrapper .jb-grid-content .collapse-btn{float:right;cursor:pointer;margin-left:8px}.jb-grid-wrapper .jb-grid-content .collapse-btn svg{width:12px;height:100%}.jb-grid-wrapper .jb-grid-content .collapse-btn.close svg{transform:rotate(180deg);transition:all .2s ease-in-out}.jb-grid-wrapper .jb-grid-content .collapse-btn.open svg{transform:rotate(90deg);transition:all .2s ease-in-out}.jb-grid-table-detail-row{width:100%;min-height:64px;padding:5px 10px;border-bottom:1px solid #ebebeb}.jb-grid-full-screen-container{width:100%;height:100%;background-color:red;position:absolute;z-index:1;top:0;right:0}\n";
styleInject(css);

var css$1 = ".jb-loading .blobs{filter:url(#goo);width:300px;height:300px;position:relative;overflow:hidden;border-radius:70px;transform-style:preserve-3d}.jb-loading .blobs .blob-center{transform-style:preserve-3d;position:absolute;background:#f74343;top:50%;left:50%;width:30px;height:30px;transform-origin:left top;transform:scale(0.9) translate(-50%, -50%);animation:blob-grow\r linear\r 3.4s\r infinite;border-radius:50%;box-shadow:0 -10px 40px -5px #f74343}.jb-loading .style-svg{width:0;height:0}.jb-loading .blob{position:absolute;background:#f74343;top:50%;left:50%;width:30px;height:30px;border-radius:50%;animation:blobs\r ease-out\r 3.4s\r infinite;transform:scale(0.9) translate(-50%, -50%);transform-origin:center top;opacity:0}.jb-loading .blob:nth-child(1){animation-delay:.2s}.jb-loading .blob:nth-child(2){animation-delay:.4s}.jb-loading .blob:nth-child(3){animation-delay:.6s}.jb-loading .blob:nth-child(4){animation-delay:.8s}.jb-loading .blob:nth-child(5){animation-delay:1s}@keyframes blobs{0%{opacity:0;transform:scale(0) translate(calc(-330px - 50%), -50%)}1%{opacity:1}35%,65%{opacity:1;transform:scale(0.9) translate(-50%, -50%)}99%{opacity:1}100%{opacity:0;transform:scale(0) translate(calc(330px - 50%), -50%)}}@keyframes blob-grow{0%,39%{transform:scale(0) translate(-50%, -50%)}40%,42%{transform:scale(1, 0.9) translate(-50%, -50%)}43%,44%{transform:scale(1.2, 1.1) translate(-50%, -50%)}45%,46%{transform:scale(1.3, 1.2) translate(-50%, -50%)}47%,48%{transform:scale(1.4, 1.3) translate(-50%, -50%)}52%{transform:scale(1.5, 1.4) translate(-50%, -50%)}54%{transform:scale(1.7, 1.6) translate(-50%, -50%)}58%{transform:scale(1.8, 1.7) translate(-50%, -50%)}68%,70%{transform:scale(1.7, 1.5) translate(-50%, -50%)}78%{transform:scale(1.6, 1.4) translate(-50%, -50%)}80%,81%{transform:scale(1.5, 1.4) translate(-50%, -50%)}82%,83%{transform:scale(1.4, 1.3) translate(-50%, -50%)}84%,85%{transform:scale(1.3, 1.2) translate(-50%, -50%)}86%,87%{transform:scale(1.2, 1.1) translate(-50%, -50%)}90%,91%{transform:scale(1, 0.9) translate(-50%, -50%)}92%,100%{transform:scale(0) translate(-50%, -50%)}}\n";
styleInject(css$1);

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
var JBLoading =
function (_React$Component) {
  _inherits(JBLoading, _React$Component);
  function JBLoading() {
    _classCallCheck$1(this, JBLoading);
    return _possibleConstructorReturn(this, _getPrototypeOf(JBLoading).apply(this, arguments));
  }
  _createClass$1(JBLoading, [{
    key: "render",
    value: function render() {
      var renderDom = React.createElement("div", {
        className: "jb-loading"
      }, React.createElement("div", {
        className: "blobs"
      }, React.createElement("div", {
        className: "blob-center"
      }), React.createElement("div", {
        className: "blob"
      }), React.createElement("div", {
        className: "blob"
      }), React.createElement("div", {
        className: "blob"
      }), React.createElement("div", {
        className: "blob"
      }), React.createElement("div", {
        className: "blob"
      }), React.createElement("div", {
        className: "blob"
      })), React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        version: "1.1",
        className: "style-svg"
      }, React.createElement("defs", null, React.createElement("filter", {
        id: "goo"
      }, React.createElement("feGaussianBlur", {
        in: "SourceGraphic",
        stdDeviation: "10",
        result: "blur"
      }), React.createElement("feColorMatrix", {
        in: "blur",
        mode: "matrix",
        values: "1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7",
        result: "goo"
      }), React.createElement("feBlend", {
        in: "SourceGraphic",
        in2: "goo"
      })))));
      return renderDom;
    }
  }]);
  return JBLoading;
}(React.Component);

var _class$1;
function _typeof$1(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof$1(obj); }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties$2(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass$2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$2(Constructor.prototype, protoProps); if (staticProps) _defineProperties$2(Constructor, staticProps); return Constructor; }
function _possibleConstructorReturn$1(self, call) { if (call && (_typeof$1(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized$1(self); }
function _assertThisInitialized$1(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _getPrototypeOf$1(o) { _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$1(o); }
function _inherits$1(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$1(subClass, superClass); }
function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }
var JBGrid = observer(_class$1 =
function (_React$Component) {
  _inherits$1(JBGrid, _React$Component);
  function JBGrid(props) {
    var _this;
    _classCallCheck$2(this, JBGrid);
    _this = _possibleConstructorReturn$1(this, _getPrototypeOf$1(JBGrid).call(this, props));
    _this.service = new JBGridService(props.config, props.bridge);
    return _this;
  }
  _createClass$2(JBGrid, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.service.onComponentDidMount();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      return React.createElement("div", {
        className: "jb-grid-wrapper " + this.props.className,
        ref: function ref(dom) {
          return _this2.service.JBGridComponentDom = dom;
        },
        style: this.props.style
      }, React.createElement("section", {
        key: 'jb-grid-header',
        className: "jb-grid-header"
      }, React.createElement("section", {
        className: "main-section " + (this.service.config.states.headerSection == "main" ? "" : "hidden")
      }, React.createElement("section", {
        className: "jb-grid-title"
      }, this.service.config.title), React.createElement("section", {
        className: "button-container"
      }, this.service.config.customComponents.headerEnd.map(function (Component, index) {
        return React.createElement("div", {
          key: index,
          className: "custom-component-wrapper-header-end"
        }, React.createElement(Component.component, Component.props));
      }), this.service.config.filter.columns && React.createElement("div", {
        className: "filter-btn btn",
        onClick: function onClick(e) {
          _this2.service.openSearchHeaderSection();
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        enableBackground: "new 0 0 36 30",
        height: "30px",
        id: "Layer_1",
        version: "1.1",
        viewBox: "0 0 36 30",
        width: "36px"
      }, React.createElement("polygon", {
        points: "14,30 22,25 22,17 35.999,0 17.988,0 0,0 14,17 "
      }))))), React.createElement("section", {
        className: "search-section " + (this.service.config.states.headerSection == "search" ? "" : "hidden"),
        style: {
          height: this.service.styles.searchBar.height
        }
      }, React.createElement("div", {
        className: "close-btn",
        onClick: function onClick() {
          _this2.service.openMainHeaderSection();
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        version: "1.1",
        x: "0px",
        y: "0px",
        viewBox: "0 0 224.512 224.512"
      }, React.createElement("g", null, React.createElement("polygon", {
        points: "224.507,6.997 217.521,0 112.256,105.258 6.998,0 0.005,6.997 105.263,112.254    0.005,217.512 6.998,224.512 112.256,119.24 217.521,224.512 224.507,217.512 119.249,112.254  "
      })))), React.createElement("div", {
        className: "search-bar-wrapper"
      }, this.service.config.filter.columns && React.createElement(JBSearchBar, {
        config: this.service.config.filter,
        className: "search",
        onSearch: function onSearch(e) {
          return _this2.service.onSearch(e);
        }
      })))), React.createElement("section", {
        key: 'jb-grid-content',
        className: "jb-grid-content",
        style: {
          height: this.service.styles.contentWrapper.height
        }
      }, this.service.isErrorOccurred && React.createElement("div", {
        className: "error-panel"
      }, React.createElement("div", {
        className: "error-image"
      }, "\uD83D\uDE2C\uD83D\uDE13\uD83E\uDD14"), React.createElement("div", {
        className: "error-text",
        style: {
          padding: " 0 0 0 0"
        }
      }, "\u3059\u307F\u307E\u305B\u3093"), React.createElement("div", {
        className: "error-text"
      }, this.service.config.captions.serverErrorText), React.createElement("div", {
        className: "error-button"
      }, React.createElement("button", {
        onClick: function onClick(e) {
          return _this2.service.refreshBtnClick(e);
        }
      }, "\u062A\u0644\u0627\u0634 \u0645\u062C\u062F\u062F"))), !this.service.isErrorOccurred && [React.createElement("section", {
        className: "table-header",
        key: "table-header"
      }, React.createElement("div", {
        className: "table-header-wrapper",
        style: _objectSpread({}, this.service.styles.table.generalCols, this.service.styles.table.scrollIndent)
      }, this.service.config.table.columns.map(function (item, index) {
        return React.createElement("div", {
          onClick: function onClick(e) {
            return _this2.service.setSortColumn(item);
          },
          key: item.name + '-' + item.id + '-' + "jb-grid-table-header",
          title: item.name,
          className: 'header-item ' + (item.sortable ? 'sortable-col' : '')
        }, React.createElement("div", {
          className: "caption-wrapper"
        }, item.caption), item.sort && React.createElement("div", {
          className: "sort-icon-wrapper"
        }, React.createElement("svg", {
          className: '--' + item.sort.toLowerCase(),
          version: "1.1",
          id: "Capa_1",
          x: "0px",
          y: "0px",
          viewBox: "0 0 31.479 31.479"
        }, React.createElement("path", {
          d: "M26.477,10.274c0.444,0.444,0.444,1.143,0,1.587c-0.429,0.429-1.143,0.429-1.571,0l-8.047-8.047  v26.555c0,0.619-0.492,1.111-1.111,1.111c-0.619,0-1.127-0.492-1.127-1.111V3.813l-8.031,8.047c-0.444,0.429-1.159,0.429-1.587,0  c-0.444-0.444-0.444-1.143,0-1.587l9.952-9.952c0.429-0.429,1.143-0.429,1.571,0L26.477,10.274z"
        }))));
      }))), React.createElement("section", {
        className: "table-content",
        key: "table-content"
      }, React.createElement("div", {
        className: "table-content-wrapper"
      }, this.props.children))], this.service.isLoading ? React.createElement("section", {
        className: "loading"
      }, React.createElement("div", {
        className: "loading-content"
      }, React.createElement(JBLoading, null))) : ''), React.createElement("section", {
        key: 'jb-grid-footer',
        className: "jb-grid-footer"
      }, React.createElement("section", {
        className: "navigation-section nav-btn"
      }, React.createElement("nav", null, React.createElement("div", {
        className: "last-Page-btn nav-btn",
        title: this.service.config.page.totalPages,
        onClick: function onClick(e) {
          return _this2.service.goToLastPage(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "100%",
        height: "100%",
        viewBox: "0 0 24 24",
        fit: "",
        preserveAspectRatio: "xMidYMid meet"
      }, React.createElement("path", {
        d: "M15 6 v12 h2 v-12 h-2z M8 6L6.59 7.41 11.17 12l-4.58 4.59L8 18l6-6z"
      }))), React.createElement("div", {
        className: "next-Page-btn nav-btn",
        onClick: function onClick(e) {
          return _this2.service.goToNextPage(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "100%",
        height: "100%",
        viewBox: "0 0 24 24",
        fit: "",
        preserveAspectRatio: "xMidYMid meet"
      }, React.createElement("path", {
        d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
      }))), React.createElement("div", {
        className: "number-container"
      }, React.createElement("div", {
        className: "number-wrapper"
      }, React.createElement("div", {
        className: "number-btn",
        onClick: function onClick() {
          return _this2.service.goToPage(_this2.service.config.page.index + 2);
        }
      }, this.service.config.page.index + 2 <= this.service.config.page.totalPages ? this.service.toPersianNumber(this.service.config.page.index + 2) : ''), React.createElement("div", {
        className: "number-btn",
        onClick: function onClick() {
          return _this2.service.goToPage(_this2.service.config.page.index + 1);
        }
      }, this.service.config.page.index + 1 <= this.service.config.page.totalPages ? this.service.toPersianNumber(this.service.config.page.index + 1) : ''), React.createElement("div", {
        className: "number-btn current-page",
        onClick: function onClick() {
          return _this2.service.changePageNumberToInput();
        }
      }, this.service.toPersianNumber(this.service.config.page.index)), React.createElement("div", {
        className: "number-btn",
        onClick: function onClick() {
          return _this2.service.goToPage(_this2.service.config.page.index - 1);
        }
      }, this.service.config.page.index - 1 > 0 ? this.service.toPersianNumber(this.service.config.page.index - 1) : ''), React.createElement("div", {
        className: "number-btn",
        onClick: function onClick() {
          return _this2.service.goToPage(_this2.service.config.page.index - 2);
        }
      }, this.service.config.page.index - 2 > 0 ? this.service.toPersianNumber(this.service.config.page.index - 2) : ''))), React.createElement("div", {
        className: "prev-Page-btn nav-btn",
        onClick: function onClick(e) {
          return _this2.service.goToPrevPage(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "100%",
        height: "100%",
        viewBox: "0 0 24 24",
        fit: "",
        preserveAspectRatio: "xMidYMid meet"
      }, React.createElement("path", {
        d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
      }))), React.createElement("div", {
        className: "first-Page-btn nav-btn",
        onClick: function onClick(e) {
          return _this2.service.goToFirstPage(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "100%",
        height: "100%",
        viewBox: "0 0 24 24",
        fit: "",
        preserveAspectRatio: "xMidYMid meet"
      }, React.createElement("path", {
        d: "M7 6 v12 h2 v-12 h-2z M17.41 7.41L16 6l-6 6 6 6 1.41-1.41L12.83 12z"
      }))))), React.createElement("section", {
        className: "items-information-section"
      }, React.createElement("span", null, this.service.toPersianNumber(this.service.config.data.itemsInformation.startItemIndex)), React.createElement("span", null, "-"), React.createElement("span", null, " ", this.service.toPersianNumber(this.service.config.data.itemsInformation.endItemIndex), " "), React.createElement("span", null, " \xA0\u0627\u0632"), React.createElement("span", {
        title: "\u062A\u0639\u062F\u0627\u062F \u06A9\u0644 \u0627\u06CC\u062A\u0645 \u0647\u0627\u06CC \u0645\u0648\u062C\u0648\u062F"
      }, "\xA0 ", this.service.toPersianNumber(this.service.config.data.itemsInformation.totalItemsCount), " \xA0")), React.createElement("section", {
        className: "page-size-section",
        title: "\u062A\u0639\u062F\u0627\u062F \u0622\u06CC\u062A\u0645 \u062F\u0631 \u0647\u0631 \u0635\u0641\u062D\u0647"
      }, React.createElement("select", {
        value: this.service.config.page.size,
        className: "page-size-select",
        onChange: function onChange(e) {
          return _this2.service.onPageSizeChange(e);
        }
      }, React.createElement("option", {
        value: 20
      }, this.service.toPersianNumber(20)), React.createElement("option", {
        value: 30
      }, this.service.toPersianNumber(30)), React.createElement("option", {
        value: 50
      }, this.service.toPersianNumber(50)), React.createElement("option", {
        value: 100
      }, this.service.toPersianNumber(100)))), React.createElement("section", {
        className: "btn-wrapper-section"
      }, this.service.config.fullScreenable && React.createElement("div", {
        className: "btn",
        onClick: function onClick(e) {
          return _this2.service.onFullScreenBtnClicked(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        xlink: "http://www.w3.org/1999/xlink",
        version: "1.0",
        x: "0px",
        y: "0px",
        viewBox: "0 0 128 128",
        space: "preserve",
        className: this.service.config.states.isFullScreen ? 'exit-full-screen-svg' : 'full-screen-svg'
      }, React.createElement("g", {
        className: "arrow",
        transform: !this.service.config.states.isFullScreen ? '' : "translate(0, 0) rotate(180 30 30)"
      }, React.createElement("path", {
        d: "M47.979,41.795L26.466,20.292c-3.995-6.034,6.546-6.069,6.546-6.069h6.385c4.054-0.105,6.282-2.363,6.24-5.229   c-0.041-2.866-1.591-5.216-5.167-5.151H23.679C-0.4,2.575,0.342,20.363,0.755,24.486c0.02,0.208-0.015,0.375,0,0.502v0.025   l0.011,15.21c-0.029,2.556,1.211,5.834,4.501,6.265c3.329,0.434,6.025-2.22,6.06-4.774v-9.788v0.084   c-0.062-7.879,5.311-3.858,5.311-3.858l23.346,22.95c1.842,1.843,6.8,3.308,9.362,0.711C53.583,47.516,49.821,43.637,47.979,41.795   z"
      }), React.createElement("path", {
        d: "M0.755,26.555c0,0,0.024-0.099,0-0.277v-0.004V26.555z"
      })), React.createElement("g", {
        className: "arrow",
        transform: !this.service.config.states.isFullScreen ? '' : "translate(0, 0) rotate(180 100 30)"
      }, React.createElement("path", {
        d: "M89.483,50.518l21.504-21.512c6.034-3.995,6.07,6.546,6.07,6.546v6.385c0.104,4.055,2.361,6.281,5.228,6.24   c2.867-0.04,5.217-1.59,5.152-5.167V26.219c1.266-24.08-16.521-23.337-20.645-22.924c-0.206,0.02-0.374-0.015-0.503,0h-0.024   l-15.21,0.011c-2.557-0.029-5.834,1.211-6.265,4.501c-0.436,3.329,2.219,6.025,4.773,6.06h9.789H99.27   c7.879-0.062,3.858,5.311,3.858,5.311L80.177,42.524c-1.842,1.842-3.309,6.801-0.711,9.363   C83.764,56.123,87.642,52.362,89.483,50.518z"
      }), React.createElement("path", {
        d: "M104.723,3.294c0,0,0.101,0.024,0.279,0h0.003H104.723z"
      })), React.createElement("g", {
        className: "arrow",
        transform: !this.service.config.states.isFullScreen ? '' : "translate(0, 0) rotate(180 100 100)"
      }, React.createElement("path", {
        d: "M80.759,88.376l21.514,21.505c3.995,6.035-6.546,6.068-6.546,6.068H89.34c-4.054,0.106-6.282,2.364-6.24,5.23   c0.041,2.863,1.591,5.214,5.167,5.149h16.792c24.08,1.269,23.337-16.521,22.924-20.642c-0.02-0.21,0.017-0.377,0-0.503v-0.025   l-0.012-15.21c0.031-2.557-1.209-5.834-4.501-6.265c-3.327-0.436-6.023,2.219-6.06,4.772v9.79v-0.084   c0.062,7.879-5.312,3.856-5.312,3.856L88.753,79.068c-1.843-1.841-6.8-3.308-9.362-0.709   C75.153,82.656,78.916,86.534,80.759,88.376z"
      }), React.createElement("path", {
        d: "M127.982,103.617c0,0-0.022,0.098,0,0.276v0.006V103.617z"
      })), React.createElement("g", {
        className: "arrow",
        transform: !this.service.config.states.isFullScreen ? '' : "translate(0, 0) rotate(180 30 100)"
      }, React.createElement("path", {
        d: "M43.481,79.65l-21.503,21.514c-6.035,3.995-6.07-6.547-6.07-6.547v-6.384c-0.104-4.054-2.362-6.283-5.229-6.241   c-2.865,0.041-5.215,1.592-5.151,5.168v16.792c-1.267,24.078,16.521,23.338,20.643,22.924c0.208-0.02,0.375,0.015,0.503,0h0.025   l15.21-0.011c2.557,0.028,5.833-1.213,6.264-4.501c0.436-3.33-2.219-6.026-4.773-6.06h-9.789h0.084   c-7.879,0.062-3.857-5.312-3.857-5.312l22.949-23.347c1.843-1.844,3.31-6.8,0.711-9.363C49.201,74.045,45.323,77.809,43.481,79.65z   "
      }), React.createElement("path", {
        d: "M28.242,126.876c0,0-0.1-0.024-0.278,0h-0.004H28.242z"
      })))), React.createElement("div", {
        className: "btn refresh-btn",
        onClick: function onClick(e) {
          return _this2.service.refreshBtnClick(e);
        }
      }, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        version: "1.1",
        id: "Capa_1",
        x: "0px",
        y: "0px",
        viewBox: "0 0 305.836 305.836",
        space: "preserve",
        ref: this.service.elements.refreshIcon
      }, React.createElement("g", null, React.createElement("path", {
        d: "M152.924,300.748c84.319,0,152.912-68.6,152.912-152.918c0-39.476-15.312-77.231-42.346-105.564   c0,0,3.938-8.857,8.814-19.783c4.864-10.926-2.138-18.636-15.648-17.228l-79.125,8.289c-13.511,1.411-17.999,11.467-10.021,22.461   l46.741,64.393c7.986,10.992,17.834,12.31,22.008,2.937l7.56-16.964c12.172,18.012,18.976,39.329,18.976,61.459   c0,60.594-49.288,109.875-109.87,109.875c-60.591,0-109.882-49.287-109.882-109.875c0-19.086,4.96-37.878,14.357-54.337   c5.891-10.325,2.3-23.467-8.025-29.357c-10.328-5.896-23.464-2.3-29.36,8.031C6.923,95.107,0,121.27,0,147.829   C0,232.148,68.602,300.748,152.924,300.748z"
      })))))));
    }
  }]);
  return JBGrid;
}(React.Component)) || _class$1;

export default JBGrid;
